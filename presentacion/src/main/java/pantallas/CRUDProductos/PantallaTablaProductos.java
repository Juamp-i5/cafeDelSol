/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pantallas.CRUDProductos;

import DTOs.CRUDProductos.CategoriaProducto;
import DTOs.CRUDProductos.ProductoListDTO;
import DTOs.CRUDProductos.TamanioProducto;
import control.ControlNavegacion;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jp
 */
public class PantallaTablaProductos extends javax.swing.JFrame {

    private DefaultTableModel modeloTablaProductos;
    private Timer debounceTimer;

    private final int DEBOUNCE_DELAY = 100; //MILISEGUNDOS

    public PantallaTablaProductos() {
        initComponents();

        this.modeloTablaProductos = obtenerModeloTablaProduictos();
        setupInitialUIState();
        loadData();
    }

    private DefaultTableModel obtenerModeloTablaProduictos() {
        return (DefaultTableModel) this.tablaProductosTable.getModel();
    }

    private void setupInitialUIState() {
        disableFilters();

        this.setLocationRelativeTo(null);
    }

    private void disableFilters() {
        filtroNombreTextField.setEnabled(false);
        filtroCategoriasComboBox.setEnabled(false);
    }

    private void loadData() {
        cargarCategoriasComboBox();
        cargarTablaProductos();
    }

    private void cargarTablaProductos() {
        List<ProductoListDTO> productos = obtenerProductos();

        if (productos == null || productos.isEmpty()) {
            return;
        }

        this.modeloTablaProductos.setRowCount(0);
        for (ProductoListDTO producto : productos) {
            this.modeloTablaProductos.addRow(
                    new Object[]{producto.getId(),
                        producto.getNombre(),
                        producto.getCategoria(),
                        producto.getEstadoProducto().toString(),
                        producto.getPrecios().get(TamanioProducto.CHICO),
                        producto.getPrecios().get(TamanioProducto.MEDIANO),
                        producto.getPrecios().get(TamanioProducto.GRANDE)
                    }
            );
        }
    }

    private void cargarCategoriasComboBox() {
        CategoriaProducto[] categorias = CategoriaProducto.values();
        for (CategoriaProducto categoria : categorias) {
            this.filtroCategoriasComboBox.addItem(categoria.toString());
        }
    }

    private List<ProductoListDTO> obtenerProductos() {
        String filtroNombre = getFiltroNombre();
        String filtroCategoria = getFiltroCategoria();

        return ControlNavegacion.obtenerProductosFiltrados(filtroNombre, filtroCategoria);
    }

    private String getFiltroNombre() {
        if (filtroNombreTextField.isEnabled()) {
            return filtroNombreTextField.getText();
        } else {
            return "";
        }
    }

    private String getFiltroCategoria() {
        if (filtroCategoriasComboBox.isEnabled()) {
            return filtroCategoriasComboBox.getSelectedItem().toString();
        } else {
            return "";
        }
    }

    private void debounce(Runnable action) {
        if (debounceTimer != null && debounceTimer.isRunning()) {
            debounceTimer.stop();
        }

        ActionListener taskPerformer = evt -> {
            action.run();
        };

        debounceTimer = new Timer(DEBOUNCE_DELAY, taskPerformer);
        debounceTimer.setRepeats(false);
        debounceTimer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelNorte = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        topSeparator = new javax.swing.JSeparator();
        botonAgregarProducto = new javax.swing.JButton();
        filtroNombreCheckBox = new javax.swing.JCheckBox();
        filtroCategoriaCheckBox = new javax.swing.JCheckBox();
        filtroNombreTextField = new javax.swing.JTextField();
        filtroCategoriasComboBox = new javax.swing.JComboBox<>();
        panelSur = new javax.swing.JPanel();
        botonVolver = new javax.swing.JButton();
        botonModificarProducto = new javax.swing.JButton();
        bottomSeparator = new javax.swing.JSeparator();
        panelCentro = new javax.swing.JPanel();
        tablaProductosScrollPane = new javax.swing.JScrollPane();
        tablaProductosTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tabla de Productos");
        setPreferredSize(new java.awt.Dimension(800, 600));
        setSize(new java.awt.Dimension(800, 600));

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        titleLabel.setText("Productos");

        botonAgregarProducto.setBackground(new java.awt.Color(255, 204, 153));
        botonAgregarProducto.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        botonAgregarProducto.setText("Agregar Producto");
        botonAgregarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarProductoActionPerformed(evt);
            }
        });

        filtroNombreCheckBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        filtroNombreCheckBox.setText("Nombre");
        filtroNombreCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtroNombreCheckBoxActionPerformed(evt);
            }
        });

        filtroCategoriaCheckBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        filtroCategoriaCheckBox.setText("Categoria");
        filtroCategoriaCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtroCategoriaCheckBoxActionPerformed(evt);
            }
        });

        filtroNombreTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        filtroNombreTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                filtroNombreTextFieldKeyTyped(evt);
            }
        });

        filtroCategoriasComboBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        filtroCategoriasComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                filtroCategoriasComboBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panelNorteLayout = new javax.swing.GroupLayout(panelNorte);
        panelNorte.setLayout(panelNorteLayout);
        panelNorteLayout.setHorizontalGroup(
            panelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topSeparator, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(panelNorteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleLabel)
                    .addGroup(panelNorteLayout.createSequentialGroup()
                        .addGroup(panelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filtroCategoriaCheckBox)
                            .addComponent(filtroNombreCheckBox))
                        .addGap(18, 18, 18)
                        .addGroup(panelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(filtroCategoriasComboBox, 0, 250, Short.MAX_VALUE)
                            .addComponent(filtroNombreTextField))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 249, Short.MAX_VALUE)
                .addComponent(botonAgregarProducto)
                .addContainerGap())
        );
        panelNorteLayout.setVerticalGroup(
            panelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNorteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonAgregarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(topSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filtroNombreCheckBox)
                    .addComponent(filtroNombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filtroCategoriaCheckBox)
                    .addComponent(filtroCategoriasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(panelNorte, java.awt.BorderLayout.NORTH);

        botonVolver.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        botonVolver.setText("Volver");
        botonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverActionPerformed(evt);
            }
        });

        botonModificarProducto.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        botonModificarProducto.setText("Modificar Producto");
        botonModificarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarProductoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSurLayout = new javax.swing.GroupLayout(panelSur);
        panelSur.setLayout(panelSurLayout);
        panelSurLayout.setHorizontalGroup(
            panelSurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSurLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonVolver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 525, Short.MAX_VALUE)
                .addComponent(botonModificarProducto)
                .addContainerGap())
            .addComponent(bottomSeparator, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        panelSurLayout.setVerticalGroup(
            panelSurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSurLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bottomSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonModificarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(panelSur, java.awt.BorderLayout.SOUTH);

        tablaProductosScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        tablaProductosScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tablaProductosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Categoria", "Estado", "Precio chico", "Precio mediano", "Precio grande"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProductosScrollPane.setViewportView(tablaProductosTable);

        javax.swing.GroupLayout panelCentroLayout = new javax.swing.GroupLayout(panelCentro);
        panelCentro.setLayout(panelCentroLayout);
        panelCentroLayout.setHorizontalGroup(
            panelCentroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCentroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tablaProductosScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelCentroLayout.setVerticalGroup(
            panelCentroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCentroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tablaProductosScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(panelCentro, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filtroNombreCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtroNombreCheckBoxActionPerformed
        boolean selected = filtroNombreCheckBox.isSelected();
        filtroNombreTextField.setEnabled(selected);

        debounce(() -> {
            cargarTablaProductos();
        });
    }//GEN-LAST:event_filtroNombreCheckBoxActionPerformed

    private void filtroCategoriaCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtroCategoriaCheckBoxActionPerformed
        boolean selected = filtroCategoriaCheckBox.isSelected();
        filtroCategoriasComboBox.setEnabled(selected);

        debounce(() -> {
            cargarTablaProductos();
        });
    }//GEN-LAST:event_filtroCategoriaCheckBoxActionPerformed

    private void filtroNombreTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filtroNombreTextFieldKeyTyped
        debounce(() -> {
            cargarTablaProductos();
        });
    }//GEN-LAST:event_filtroNombreTextFieldKeyTyped

    private void filtroCategoriasComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_filtroCategoriasComboBoxItemStateChanged
        debounce(() -> {
            cargarTablaProductos();
        });
    }//GEN-LAST:event_filtroCategoriasComboBoxItemStateChanged

    private void botonAgregarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarProductoActionPerformed
        ControlNavegacion.mostrarPantallaRegistrarProducto();
        this.dispose();
    }//GEN-LAST:event_botonAgregarProductoActionPerformed

    private void botonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonVolverActionPerformed

    private void botonModificarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarProductoActionPerformed
        int row = tablaProductosTable.getSelectedRow();

        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona un producto a modificar", "ALERTA", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String id = (String) modeloTablaProductos.getValueAt(row, 0);
        ControlNavegacion.mostrarPantallaDetallesProducto(id);
        this.dispose();
    }//GEN-LAST:event_botonModificarProductoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarProducto;
    private javax.swing.JButton botonModificarProducto;
    private javax.swing.JButton botonVolver;
    private javax.swing.JSeparator bottomSeparator;
    private javax.swing.JCheckBox filtroCategoriaCheckBox;
    private javax.swing.JComboBox<String> filtroCategoriasComboBox;
    private javax.swing.JCheckBox filtroNombreCheckBox;
    private javax.swing.JTextField filtroNombreTextField;
    private javax.swing.JPanel panelCentro;
    private javax.swing.JPanel panelNorte;
    private javax.swing.JPanel panelSur;
    private javax.swing.JScrollPane tablaProductosScrollPane;
    private javax.swing.JTable tablaProductosTable;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JSeparator topSeparator;
    // End of variables declaration//GEN-END:variables

    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new PantallaTablaProductos().setVisible(true);
        });
    }
}
