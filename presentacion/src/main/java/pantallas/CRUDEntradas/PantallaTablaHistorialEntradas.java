package pantallas.CRUDEntradas;

import DTOs.CRUDEntradas.EntradaViejaDTO;
import java.time.LocalDate;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import com.github.lgooddatepicker.components.DatePicker;
import com.github.lgooddatepicker.components.DatePickerSettings;
import control.ControlNavegacion;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.event.ListSelectionEvent;

/**
 *
 * @author pablo
 */
public final class PantallaTablaHistorialEntradas extends javax.swing.JFrame {

    private DatePicker datePickerInicio;
    private DatePicker datePickerFin;
    private List<EntradaViejaDTO> listaEntradas;
    private Timer debounceTimer;

    /**
     * Creates new form PantallaTablaHistorialEntradas
     */
    public PantallaTablaHistorialEntradas() {
        initComponents();
        inicializarDatePicker();
        mostrarEntradasEnTabla(null, null);
        agregarListenerSeleccionTabla();
    }

    private void inicializarDatePicker() {
        DatePickerSettings settingsInicio = new DatePickerSettings();
        settingsInicio.setFormatForDatesCommonEra("dd/MM/yyyy");
        datePickerInicio = new DatePicker(settingsInicio);
        DatePickerSettings settingsFin = new DatePickerSettings();
        settingsFin.setFormatForDatesCommonEra("dd/MM/yyyy");
        datePickerFin = new DatePicker(settingsFin);
        debounceTimer = new Timer(400, e -> actualizarFechasFiltradas());
        debounceTimer.setRepeats(false);
        datePickerInicio.addDateChangeListener(event -> Debounce());
        datePickerFin.addDateChangeListener(event -> Debounce());
        pnlFechas.setLayout(new BoxLayout(pnlFechas, BoxLayout.Y_AXIS));
        pnlFechas.add(datePickerInicio);
        pnlFechas.add(Box.createVerticalStrut(5));
        pnlFechas.add(datePickerFin);
    }

    public void mostrarEntradasEnTabla(LocalDateTime fechaInicio, LocalDateTime fechaFin) {
        DefaultTableModel modelo = (DefaultTableModel) jTable2.getModel();
        modelo.setRowCount(0);
        List<EntradaViejaDTO> entradas = ControlNavegacion.obtenerListaEntradasPorRangoFecha(fechaInicio, fechaFin);
        if (entradas == null) {
            JOptionPane.showMessageDialog(this, "No hay entradas actualmente en ese rango de fechas");
        }
        this.listaEntradas = entradas;
        for (EntradaViejaDTO entrada : entradas) {
            modelo.addRow(new Object[]{
                entrada.getFechaHora().format(DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss")),
                entrada.getProveedor(),
                entrada.getDetallesEntrada().size(),
                entrada.getPrecioTotal()
            });
        }
    }

    private void actualizarFechasFiltradas() {
        LocalDate fechaInicio = datePickerInicio.getDate();
        LocalDate fechaFin = datePickerFin.getDate();
        LocalDateTime filtroInicio;
        LocalDateTime filtroFin;
        if (fechaInicio != null && fechaFin != null && fechaInicio.isAfter(fechaFin)) {
            JOptionPane.showMessageDialog(this, "La fecha de inicio no puede ser posterior a la fecha final.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (fechaInicio == null && fechaFin == null) {
            filtroInicio = LocalDateTime.of(2025, 1, 1, 0, 0);
            filtroFin = LocalDateTime.now();
        } else {
            filtroInicio = (fechaInicio != null) ? fechaInicio.atStartOfDay()
                    : LocalDateTime.of(2025, 1, 1, 0, 0);
            filtroFin = (fechaFin != null) ? fechaFin.atTime(LocalTime.MAX) : LocalDateTime.now();
        }
        mostrarEntradasEnTabla(filtroInicio, filtroFin);
    }

    private void agregarListenerSeleccionTabla() {
        jTable2.getSelectionModel().addListSelectionListener((ListSelectionEvent event) -> {
            if (!event.getValueIsAdjusting()) {
                int filaSeleccionada = jTable2.getSelectedRow();
                if (filaSeleccionada != -1) {
                    EntradaViejaDTO entradaSeleccionada = listaEntradas.get(filaSeleccionada);
                    ControlNavegacion.mostrarPantallaDetallesEntrada(entradaSeleccionada);
                    PantallaTablaHistorialEntradas.this.setVisible(false);
                }
            }
        });
    }

    private void Debounce() {
        if (debounceTimer.isRunning()) {
            debounceTimer.restart();
        } else {
            debounceTimer.start();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnVolverAtras = new javax.swing.JButton();
        BtnAgregarRegistro = new javax.swing.JButton();
        BtnInventario = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        LbTitulo = new javax.swing.JLabel();
        LbFechaInicio = new javax.swing.JLabel();
        LbFechaFin = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        pnlFechas = new javax.swing.JPanel();
        ScrollPaneHistorial = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BtnVolverAtras.setText("<--");
        BtnVolverAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnVolverAtrasActionPerformed(evt);
            }
        });

        BtnAgregarRegistro.setText("Registrar Entrada");
        BtnAgregarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAgregarRegistroActionPerformed(evt);
            }
        });

        BtnInventario.setText("Inventario");
        BtnInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnInventarioActionPerformed(evt);
            }
        });

        LbTitulo.setText("Historial");

        LbFechaInicio.setText("Fecha Inicio");

        LbFechaFin.setText("Fecha Fin");

        javax.swing.GroupLayout pnlFechasLayout = new javax.swing.GroupLayout(pnlFechas);
        pnlFechas.setLayout(pnlFechasLayout);
        pnlFechasLayout.setHorizontalGroup(
            pnlFechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 188, Short.MAX_VALUE)
        );
        pnlFechasLayout.setVerticalGroup(
            pnlFechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 58, Short.MAX_VALUE)
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha y Hora", "Proveedor", "Cantidad de productos", "Precio total"
            }
        ));
        ScrollPaneHistorial.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BtnVolverAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnAgregarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ScrollPaneHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, 1004, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 8, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(LbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LbFechaInicio)
                            .addComponent(LbFechaFin))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlFechas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(LbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlFechas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LbFechaInicio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LbFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ScrollPaneHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BtnInventario, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                    .addComponent(BtnAgregarRegistro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnVolverAtras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        LbTitulo.setFont(new java.awt.Font("Segoe UI", 1, 36));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnVolverAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnVolverAtrasActionPerformed
        ControlNavegacion.mostrarPantallaGestionInventario();
        this.dispose();
    }//GEN-LAST:event_BtnVolverAtrasActionPerformed

    private void BtnAgregarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAgregarRegistroActionPerformed
        ControlNavegacion.mostrarPantallaRegistroEntrada();
        this.dispose();
    }//GEN-LAST:event_BtnAgregarRegistroActionPerformed

    private void BtnInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnInventarioActionPerformed
        ControlNavegacion.mostrarPantallaListaIngredientes();
        this.dispose();
    }//GEN-LAST:event_BtnInventarioActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAgregarRegistro;
    private javax.swing.JButton BtnInventario;
    private javax.swing.JButton BtnVolverAtras;
    private javax.swing.JLabel LbFechaFin;
    private javax.swing.JLabel LbFechaInicio;
    private javax.swing.JLabel LbTitulo;
    private javax.swing.JScrollPane ScrollPaneHistorial;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel pnlFechas;
    // End of variables declaration//GEN-END:variables
}
